on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
    - run: npm install
    - run: npm run build
    - run: npm run lint -- -f json -o artifacts/eslint_report.json
    - run: xvfb-run -a npm run test:coverage
      if: runner.os == 'Linux'
    - run: npm run test:coverage
      if: runner.os != 'Linux'
    - run: |
        pwd && ls -al
        cd coverage
        ls -al
        cd artifacts
        ls -al
    - name: SonarQube Scan
      if: matrix.os == 'ubuntu-latest'
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Publish
      if: success() && startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
      env:
        GH_REF: ${{ github.ref }}
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
      run: |
        npm run package
        echo "github.ref_name: ${{ github.ref_name }}"
        echo "GH_REF=${{ github.ref_name }}"
        echo "GH_REF2=${GH_REF//refs\/tags\//}"
        echo "GH_REF3=${GH_REF//refs\/tags\/}"
        gh release upload ${GH_REF//refs\/tags\/}" bats-test-runner-*.vsix
        gh release upload ${{ github.ref_name }} bats-test-runner-*.vsix
        npm run deploy
